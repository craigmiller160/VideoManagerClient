// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppContent renders successfully with VideoListComponent for root route 1`] = `
<AppContent
  checkIsScanning={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "key": "ow91kq",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "key": "ow91kq",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "key": "ow91kq",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/",
      "url": "/",
    }
  }
  showErrorAlert={[MockFunction]}
>
  <div>
    <VideoNavbar>
      <Navbar
        color="dark"
        dark={true}
        expand="md"
        tag="nav"
      >
        <nav
          className="navbar navbar-expand-md navbar-dark bg-dark"
        >
          <Container
            tag="div"
          >
            <div
              className="container"
            >
              <NavbarBrand
                tag={[Function]}
                to="/"
              >
                <Link
                  className="navbar-brand"
                  replace={false}
                  to="/"
                >
                  <a
                    className="navbar-brand"
                    href="/"
                    onClick={[Function]}
                  >
                    Video Manager
                  </a>
                </Link>
              </NavbarBrand>
              <NavbarToggler
                onClick={[Function]}
                tag="button"
                type="button"
              >
                <button
                  className="navbar-toggler"
                  onClick={[Function]}
                  type="button"
                >
                  <span
                    className="navbar-toggler-icon"
                  />
                </button>
              </NavbarToggler>
              <Collapse
                appear={false}
                enter={true}
                exit={true}
                in={false}
                isOpen={false}
                mountOnEnter={false}
                navbar={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                tag="div"
                timeout={350}
                unmountOnExit={false}
              >
                <Transition
                  appear={false}
                  enter={true}
                  exit={true}
                  in={false}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={350}
                  unmountOnExit={false}
                >
                  <div
                    className="collapse navbar-collapse"
                    style={Object {}}
                  >
                    <Nav
                      className="ml-auto"
                      navbar={true}
                      tag="ul"
                      vertical={false}
                    >
                      <ul
                        className="ml-auto navbar-nav"
                      >
                        <NavItem
                          tag="li"
                        >
                          <li
                            className="nav-item"
                          >
                            <NavLink
                              id="scanDirectory"
                              onClick={[Function]}
                              tag="a"
                            >
                              <a
                                className="nav-link"
                                id="scanDirectory"
                                onClick={[Function]}
                              >
                                Scan Directory
                              </a>
                            </NavLink>
                          </li>
                        </NavItem>
                      </ul>
                    </Nav>
                  </div>
                </Transition>
              </Collapse>
            </div>
          </Container>
        </nav>
      </Navbar>
    </VideoNavbar>
    <Container
      tag="div"
    >
      <div
        className="container"
      >
        <Row
          tag="div"
        >
          <div
            className="row"
          >
            <Col
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
              xs={
                Object {
                  "offset": 2,
                  "size": 8,
                }
              }
            >
              <div
                className="col-8 offset-2"
              >
                <Component>
                  Alert
                </Component>
              </div>
            </Col>
          </div>
        </Row>
        <Switch>
          <Route
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            location={
              Object {
                "hash": "",
                "key": "ow91kq",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
            render={[Function]}
          >
            <Component
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "ow91kq",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "ow91kq",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "key": "ow91kq",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              VideoListLayout
            </Component>
          </Route>
        </Switch>
      </div>
    </Container>
  </div>
</AppContent>
`;
