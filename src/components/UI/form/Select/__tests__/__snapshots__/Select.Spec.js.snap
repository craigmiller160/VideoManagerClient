// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    label="My Select"
    name="MySelect"
    options={
      Array [
        Object {
          "label": "Opt1",
          "value": "opt1",
        },
        Object {
          "label": "Opt2",
          "value": "opt2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "component": [Function],
      "label": "My Select",
      "name": "MySelect",
      "options": Array [
        Object {
          "label": "Opt1",
          "value": "opt1",
        },
        Object {
          "label": "Opt2",
          "value": "opt2",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "displayName": "Field",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "component": [Function],
        "label": "My Select",
        "name": "MySelect",
        "options": Array [
          Object {
            "label": "Opt1",
            "value": "opt1",
          },
          Object {
            "label": "Opt2",
            "value": "opt2",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Field",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
